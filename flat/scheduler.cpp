#include <iostream>
#include <cstdlib>

#include "scheduler.hpp"
#include "afllib.hpp"

Scheduler::Scheduler() 
{
	_V0_gen = 0;
	_V1_gen = 0;
	_V2_gen = 0;
}

void Scheduler::updateIO(const int V0, const int V1, const int V2) {
	//Autogenerate with Dextool --> entire if should be autogenerated
	//X_gen should be used as temp variables. _IF_ anything needs to be changed and/or checked before change to real ports (most likely not). Could be removed otherwise.
	if (V0 != _V0_gen && V0 != _V0) 
	{
		_V0_gen = V0;
		_V0 = V0;
	}

	if (V1 != _V1_gen && V1 != _V1) 
	{
		_V1_gen = V1;
		_V1 = V1;
	}

	if (V2 != _V2_gen && V2 != _V2) 
	{
		_V2_gen = V2;
		_V2 = V2;
	}
}

void Scheduler::APP_Execute() 
{
	if (_V0 == 2 && _V1 == 3) 
	{
		_V2 = 55;
	}
}

void Scheduler::APP_Initialize() {
	_V0 = 0;
	_V1 = 0;
	_V2 = 0;
}

/*int main(int argc, char **argv)
{
	char* afl_data;
	unsigned int seed = 3;
	Scheduler sched;
	std::cin >> afl_data;
	AFL afl(afl_data);

	srand(afl.getSeed());

	sched.APP_Initialize();
	sched.updateIO(0,0,0); //--> Should retrieve data from AFL

	for (int n = 0; n < afl.getCycles(); n++) {
		sched.APP_Execute();
		sched.updateIO(rand() % 10, 3, rand() % 100+100); //V1 as constant, maybe autogenerate parameters?????
	}
	
	std::cout << sched._V2 << std::endl; 
	//Terminate() here!
    return 0;
}*/